{
    "patches": [
        {
            "label": "2025-10-24_18-37-45",
            "content": "@@ -1,12 +1,32 @@\n+@@ -1,2936 +0,0 @@%0A-\n class Lead:%0A\n@@ -24,17 +24,19 @@\n ss Lead:\n-%0A\n+%250A\n     def \n@@ -79,34 +79,38 @@\n hardness: str = \n-%22%22\n+%2522%2522\n , size: int = 0)\n@@ -102,33 +102,35 @@\n  size: int = 0):\n-%0A\n+%250A\n         self.__t\n@@ -148,33 +148,35 @@\n loat = thickness\n-%0A\n+%250A\n         self.__h\n@@ -190,33 +190,35 @@\n : str = hardness\n-%0A\n+%250A\n         self.__s\n@@ -228,26 +228,30 @@\n : int = size\n-%0A%0A\n+%250A%250A\n     def get_\n@@ -258,33 +258,35 @@\n thickness(self):\n-%0A\n+%250A\n         return s\n@@ -292,33 +292,35 @@\n self.__thickness\n-%0A\n+%250A\n     def get_hard\n@@ -326,25 +326,27 @@\n dness(self):\n-%0A\n+%250A\n         retu\n@@ -359,25 +359,27 @@\n f.__hardness\n-%0A\n+%250A\n     def get_\n@@ -381,33 +381,35 @@\n  get_size(self):\n-%0A\n+%250A\n         return s\n@@ -418,17 +418,19 @@\n f.__size\n-%0A\n+%250A\n     def \n@@ -456,17 +456,19 @@\n e: int):\n-%0A\n+%250A\n         \n@@ -486,18 +486,22 @@\n  = value\n-%0A%0A\n+%250A%250A\n     def \n@@ -554,10 +554,14 @@\n r = \n-%22%22\n+%2522%2522\n , si\n@@ -573,17 +573,19 @@\n nt = 0):\n-%0A\n+%250A\n         \n@@ -608,25 +608,27 @@\n  = thickness\n-%0A\n+%250A\n         self\n@@ -645,25 +645,27 @@\n s = hardness\n-%0A\n+%250A\n         self\n@@ -678,18 +678,22 @@\n e = size\n-%0A%0A\n+%250A%250A\n     def \n@@ -698,33 +698,35 @@\n f __str__(self):\n-%0A\n+%250A\n         return f\n@@ -729,11 +729,17 @@\n rn f\n-%22%5B%7B\n+%2522%255B%257B\n self\n@@ -746,27 +746,31 @@\n .__thickness\n-%7D:%7B\n+%257D:%257B\n self.__hardn\n@@ -776,11 +776,15 @@\n ness\n-%7D:%7B\n+%257D:%257B\n self\n@@ -794,13 +794,23 @@\n size\n-%7D%5D%22%0A%0A\n+%257D%255D%2522%250A%250A\n  #cl\n@@ -825,17 +825,19 @@\n lapis   \n-%0A\n+%250A\n class Pe\n@@ -841,17 +841,19 @@\n  Pencil:\n-%0A\n+%250A\n     def \n@@ -859,33 +859,35 @@\n  __init__(self):\n-%0A\n+%250A\n         self.tip\n@@ -897,9 +897,11 @@\n ead \n-%7C\n+%257C\n  Non\n@@ -904,25 +904,27 @@\n  None = None\n-%0A\n+%250A\n         self\n@@ -946,17 +946,19 @@\n at = 0.0\n-%0A\n+%250A\n     def \n@@ -986,17 +986,19 @@\n  float):\n-%0A\n+%250A\n         \n@@ -1023,17 +1023,19 @@\n hickness\n-%0A\n+%250A\n     def \n@@ -1057,16 +1057,20 @@\n f) -\n-%3E\n+%253E\n  bool:\n-%0A\n+%250A\n     \n@@ -1100,17 +1100,19 @@\n not None\n-%0A\n+%250A\n     def \n@@ -1136,17 +1136,19 @@\n : Lead):\n-%0A\n+%250A\n         \n@@ -1161,33 +1161,35 @@\n f.has_grafite():\n-%0A\n+%250A\n             prin\n@@ -1186,25 +1186,27 @@\n       print(\n-%22\n+%2522\n fail: ja exi\n@@ -1208,35 +1208,39 @@\n a existe grafite\n-%22)%0A\n+%2522)%250A\n             retu\n@@ -1233,33 +1233,35 @@\n           return\n-%0A\n+%250A\n         if lead.\n@@ -1294,17 +1294,19 @@\n ickness:\n-%0A\n+%250A\n         \n@@ -1311,25 +1311,27 @@\n       print(\n-%22\n+%2522\n fail: calibr\n@@ -1344,15 +1344,24 @@\n mpat\n-%C3%ADvel%22)%0A\n+%25C3%25ADvel%2522)%250A\n     \n@@ -1366,33 +1366,35 @@\n           return\n-%0A\n+%250A\n         self.tip\n@@ -1400,17 +1400,19 @@\n p = lead\n-%0A\n+%250A\n     def \n@@ -1416,33 +1416,35 @@\n ef remove(self):\n-%0A\n+%250A\n         self.tip\n@@ -1450,18 +1450,22 @@\n p = None\n-%0A%0A\n+%250A%250A\n     def \n@@ -1472,25 +1472,27 @@\n write(self):\n-%0A\n+%250A\n         if n\n@@ -1513,17 +1513,19 @@\n afite():\n-%0A\n+%250A\n         \n@@ -1530,25 +1530,27 @@\n       print(\n-%22\n+%2522\n fail: nao ex\n@@ -1561,19 +1561,23 @@\n  grafite\n-%22)%0A\n+%2522)%250A\n         \n@@ -1578,33 +1578,35 @@\n           return\n-%0A\n+%250A\n         gasto = \n@@ -1606,17 +1606,19 @@\n asto = 0\n-%0A\n+%250A\n         \n@@ -1651,14 +1651,20 @@\n  == \n-%22HB%22:%0A\n+%2522HB%2522:%250A\n     \n@@ -1680,17 +1680,19 @@\n asto = 1\n-%0A\n+%250A\n         \n@@ -1727,14 +1727,20 @@\n  == \n-%222B%22:%0A\n+%25222B%2522:%250A\n     \n@@ -1756,17 +1756,19 @@\n asto = 2\n-%0A\n+%250A\n         \n@@ -1803,14 +1803,20 @@\n  == \n-%224B%22:%0A\n+%25224B%2522:%250A\n     \n@@ -1832,17 +1832,19 @@\n asto = 4\n-%0A\n+%250A\n         \n@@ -1879,14 +1879,20 @@\n  == \n-%226B%22:%0A\n+%25226B%2522:%250A\n     \n@@ -1908,25 +1908,27 @@\n asto = 6\n-%0A\n+%250A\n         \n %0A       \n@@ -1915,25 +1915,27 @@\n 6%250A        \n-%0A\n+%250A\n         if s\n@@ -1957,14 +1957,18 @@\n e() \n-%3C\n+%253C\n =10:\n-%0A\n+%250A\n     \n@@ -1977,25 +1977,27 @@\n       print(\n-%22\n+%2522\n fail: tamanh\n@@ -2002,35 +2002,39 @@\n nho insuficiente\n-%22)%0A\n+%2522)%250A\n             retu\n@@ -2027,33 +2027,35 @@\n           return\n-%0A\n+%250A\n         novo_tam\n@@ -2088,17 +2088,19 @@\n  - gasto\n-%0A\n+%250A\n         \n@@ -2119,13 +2119,17 @@\n nho \n-%3C10:%0A\n+%253C10:%250A\n     \n@@ -2157,17 +2157,19 @@\n size(10)\n-%0A\n+%250A\n         \n@@ -2178,17 +2178,19 @@\n   print(\n-%22\n+%2522\n fail: fo\n@@ -2209,11 +2209,15 @@\n ente\n-%22)%0A\n+%2522)%250A\n     \n@@ -2230,17 +2230,19 @@\n   return\n-%0A\n+%250A\n         \n@@ -2276,14 +2276,18 @@\n nho)\n-%0A\n+%250A\n     \n-%0A\n+%250A\n     \n@@ -2304,17 +2304,19 @@\n _(self):\n-%0A\n+%250A\n         \n@@ -2335,17 +2335,19 @@\n == None:\n-%0A\n+%250A\n         \n@@ -2350,33 +2350,35 @@\n         return f\n-%22\n+%2522\n calibre: %7Bself.t\n@@ -2370,17 +2370,19 @@\n alibre: \n-%7B\n+%257B\n self.thi\n@@ -2379,33 +2379,35 @@\n 7Bself.thickness\n-%7D\n+%257D\n , grafite: null%22\n@@ -2405,18 +2405,22 @@\n te: null\n-%22%0A\n+%2522%250A\n         \n@@ -2431,17 +2431,19 @@\n rn f\n-%22\n+%2522\n calibre:\n %7Bsel\n@@ -2438,17 +2438,19 @@\n calibre:\n-%7B\n+%257B\n self.thi\n@@ -2455,17 +2455,19 @@\n hickness\n-%7D\n+%257D\n , grafit\n@@ -2473,17 +2473,19 @@\n te: \n-%7B\n+%257B\n self.tip\n %7D%22%0A%0A\n@@ -2484,12 +2484,20 @@\n .tip\n-%7D%22%0A%0A\n+%257D%2522%250A%250A\n def \n@@ -2503,17 +2503,19 @@\n  main():\n-%0A\n+%250A\n     lapi\n@@ -2526,17 +2526,19 @@\n Pencil()\n-%0A\n+%250A\n     whil\n@@ -2544,17 +2544,19 @@\n le True:\n-%0A\n+%250A\n         \n@@ -2574,17 +2574,19 @@\n  input()\n-%0A\n+%250A\n         \n@@ -2595,19 +2595,23 @@\n int(\n-%22$%22\n+%2522$%2522\n  + line)\n %0A   \n@@ -2606,17 +2606,19 @@\n  + line)\n-%0A\n+%250A\n         \n@@ -2631,13 +2631,17 @@\n list\n-%5Bstr%5D\n+%255Bstr%255D\n  = l\n@@ -2650,18 +2650,26 @@\n e.split(\n-)%0A\n+%2522%2522)%250A\n         \n@@ -2680,22 +2680,32 @@\n rgs \n-%5B0%5D == %22end%22:%0A\n+%255B0%255D == %2522end%2522:%250A\n     \n@@ -2717,17 +2717,19 @@\n    break\n-%0A\n+%250A\n         \n@@ -2741,23 +2741,33 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n init\n-%22:%0A\n+%2522:%250A\n     \n@@ -2786,37 +2786,43 @@\n bre = float(args\n-%5B1%5D)%0A\n+%255B1%255D)%250A\n             lapi\n@@ -2836,17 +2836,19 @@\n calibre)\n-%0A\n+%250A\n         \n@@ -2860,25 +2860,35 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n insert\n-%22:%0A\n+%2522:%250A\n     \n@@ -2919,13 +2919,19 @@\n args\n-%5B1%5D)%0A\n+%255B1%255D)%250A\n     \n@@ -2957,12 +2957,18 @@\n args\n-%5B2%5D%0A\n+%255B2%255D%250A\n     \n@@ -2994,13 +2994,19 @@\n args\n-%5B3%5D)%0A\n+%255B3%255D)%250A\n     \n@@ -3056,10 +3056,14 @@\n ize)\n-%0A%0A\n+%250A%250A\n     \n@@ -3091,17 +3091,19 @@\n grafite)\n-%0A\n+%250A\n         \n@@ -3115,25 +3115,35 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n remove\n-%22:%0A\n+%2522:%250A\n     \n@@ -3164,17 +3164,19 @@\n remove()\n-%0A\n+%250A\n         \n@@ -3188,24 +3188,34 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n write\n-%22:%0A\n+%2522:%250A\n     \n@@ -3235,17 +3235,19 @@\n .write()\n-%0A\n+%250A\n         \n@@ -3259,23 +3259,33 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n show\n-%22:%0A\n+%2522:%250A\n     \n@@ -3308,12 +3308,17 @@\n pis)\n-%0A\n+%250A\n main()\n+%250A\n %0A\n",
            "lines": "2"
        },
        {
            "label": "2025-10-26_16-38-08",
            "content": "@@ -259,29 +259,24 @@\n __thickness%0A\n-    %0A\n     def get_\n@@ -283,32 +283,32 @@\n hardness(self):%0A\n+\n         return s\n@@ -322,21 +322,16 @@\n ardness%0A\n-    %0A\n     def \n@@ -338,32 +338,32 @@\n get_size(self):%0A\n+\n         return s\n@@ -373,21 +373,16 @@\n .__size%0A\n-    %0A\n     def \n@@ -2183,33 +2183,32 @@\n eturn f%22calibre:\n- \n %7Bself.thickness%7D\n",
            "lines": "97"
        },
        {
            "label": "2025-10-26_16-41-31",
            "content": "@@ -1993,16 +1993,18 @@\n a in\n-completa\n+suficiente\n %22)%0A \n",
            "lines": "100"
        },
        {
            "label": "2025-10-26_16-42-18",
            "content": "@@ -1223,17 +1223,17 @@\n incompat\n-i\n+%C3%AD\n vel%22)%0A  \n",
            "lines": "100"
        },
        {
            "label": "2025-10-26_16-43-37",
            "content": "class Lead:\n    def __init__(self,thickness: float = 0, hardness: str = \"\", size: int = 0):\n        self.__thickness: float = thickness\n        self.__hardness: str = hardness\n        self.__size: int = size\n\n    def get_thickness(self):\n        return self.__thickness\n    \n    def get_hardness(self):\n        return self.__hardness\n    \n    def get_size(self):\n        return self.__size\n    \n    def set_size(self, value: int):\n        self.__size = value\n\n    def init (self, thickness: float = 0, hardness: str = \"\", size: int = 0):\n        self.__thickness = thickness\n        self.__hardness = hardness\n        self.__size = size\n\n    def __str__(self):\n        return f\"[{self.__thickness}:{self.__hardness}:{self.__size}]\"\n\n #classe do lapis   \nclass Pencil:\n    def __init__(self):\n        self.tip: Lead | None = None\n        self.thickness: float = 0.0\n    def init(self, thickness: float):\n        self.thickness = thickness\n    def has_grafite(self) -> bool:\n        return self.tip is not None\n    def insert(self, lead: Lead):\n        if self.has_grafite():\n            print(\"fail: ja existe grafite\")\n            return\n        if lead.get_thickness() != self.thickness:\n            print(\"fail: calibre incompativel\")\n            return\n        self.tip = lead\n    def remove(self):\n        self.tip = None\n\n    def write(self):\n        if not self.has_grafite():\n            print(\"fail: nao existe grafite\")\n            return\n        gasto = 0\n        if self.tip.get_hardness() == \"HB\":\n            gasto = 1\n        elif self.tip.get_hardness() == \"2B\":\n            gasto = 2\n        elif self.tip.get_hardness() == \"4B\":\n            gasto = 4\n        elif self.tip.get_hardness() == \"6B\":\n            gasto = 6\n        \n        if self.tip.get_size() <=10:\n            print(\"fail: tamanho insuficiente\")\n            return\n        novo_tamanho = self.tip.get_size() - gasto\n        if novo_tamanho <10:\n            self.tip.set_size(10)\n            print(\"fail: folha incompleta\")\n            return\n        self.tip.set_size(novo_tamanho)\n    \n    def __str__(self):\n        if self.tip == None:\n            return f\"calibre: {self.thickness}, grafite: null\"\n        return f\"calibre: {self.thickness}, grafite: {self.tip}\"\n\ndef main():\n    lapis = Pencil()\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n        if args [0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            lapis.init(calibre)\n        elif args[0] == \"insert\":\n            calibre = float(args[1])\n            hardness = args[2]\n            size = int(args[3])\n            grafite = Lead(calibre, hardness, size)\n\n            lapis.insert(grafite)\n        elif args[0] == \"remove\":\n            lapis.remove()\n        elif args[0] == \"write\":\n            lapis.write()\n        elif args[0] == \"show\":\n            print(lapis)\nmain()\n",
            "lines": "100"
        }
    ]
}