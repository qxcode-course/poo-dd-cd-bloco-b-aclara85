{
    "patches": [
        {
            "label": "2025-10-26_18-44-20",
            "content": "@@ -1,3330 +0,0 @@\n-class Person:%0A    def __init__(self, name: str, money: int = 0):%0A        self.__name = name%0A        self.__money = money%0A    %0A    def get_name(self):%0A        return self.__name%0A    %0A    def set_name(self, value: str):%0A        self.__name = value%0A    %0A    def get_money(self):%0A        return self.__money%0A%0A    def set_money(self, value: int):%0A        self.__money = value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__name%7D:%7Bself.__money%7D%22%0A    %0Aclass Motouber:%0A    def __init__(self):%0A        self.__cost: int = 0%0A        self.__driver: Person %7C None = None%0A        self.__passenger: Person %7C None = None%0A%0A    def get_cost(self):%0A        return self.__cost%0A    %0A    def set_cost(self, value: str):%0A        self.__cost = value%0A%0A    def get_driver(self):%0A        return self.__driver%0A    %0A    def set_driver(self, value: int):%0A        self.__driver = value%0A%0A    def get_passenger(self):%0A        return self.__passenger%0A    %0A    def set_passenger(self, value: int):%0A        self.__passenger = value%0A%0A    def __str__(self):%0A        driver_str = self.__driver if self.__driver else %22None%22%0A        passenger_str = self.__passenger if self.__passenger else %22None%22   %0A        return f%22Cost: %7Bself.__cost%7D, Driver: %7Bdriver_str%7D, Passenger: %7Bpassenger_str%7D%22%0A        %0A    def set_motorista(self, driver: Person):%0A        if self.__driver is not None:%0A            print(%22fail: ja existe um motorista%22)%0A            return%0A        self.__driver = driver%0A%0A    def set_passageiro(self, passenger: Person):%0A        if self.__passenger is not None:%0A            print(%22fail: moto ocupada%22)%0A            return%0A        self.__passenger = passenger%0A%0A    def car(self, value: int):%0A        self.__cost += value%0A    %0A    def leavePass(self):%0A        if self.__passenger is None:%0A            print(%22fail: nao ha passageiro%22)%0A            return%0A        %0A        passAntes: Person = self.__passenger%0A%0A        if self.__passenger.get_money() %3C self.__cost:%0A            print(%22fail: Passenger does not have enough money%22)%0A            self.__driver.set_money(self.__driver.get_money() + self.__cost)%0A            %0A            self.__passenger.set_money(0)%0A            self.__cost = 0%0A            self.__passenger = None%0A            print(f%22%7BpassAntes%7D left%22)%0A            return%0A        %0A        self.__passenger.set_money(self.__passenger.get_money() - self.__cost)%0A        self.__driver.set_money(self.__driver.get_money() + self.__cost)%0A        self.__cost = 0%0A        self.__passenger = None%0A        print(f%22%7BpassAntes%7D left%22)%0A    %0Adef main():%0A    motouber = Motouber()%0A    %0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        %0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(motouber)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            driver = args%5B1%5D%0A            money_driver = int(args%5B2%5D)%0A            motouber.set_motorista(Person(driver, money_driver))%0A%0A        elif args%5B0%5D == %22setPass%22:%0A            passenger = args%5B1%5D%0A            money_pass = int(args%5B2%5D)%0A            motouber.set_passageiro(Person(passenger, money_pass))%0A    %0A        elif args%5B0%5D == %22drive%22:%0A            km = int(args%5B1%5D)%0A            motouber.car(km)%0A%0A        elif args%5B0%5D == %22leavePass%22:%0A            motouber.leavePass()%0Amain()%0A%0A%0A    %0A%0A        %0A%0A%0A   %0A        %0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-27_21-06-09",
            "content": "class Person:\n    def __init__(self, name: str, money: int = 0):\n        self.__name = name\n        self.__money = money\n    \n    def get_name(self):\n        return self.__name\n    \n    def set_name(self, value: str):\n        self.__name = value\n    \n    def get_money(self):\n        return self.__money\n\n    def set_money(self, value: int):\n        self.__money = value\n\n    def __str__(self):\n        return f\"{self.__name}:{self.__money}\"\n    \nclass Motouber:\n    def __init__(self):\n        self.__cost: int = 0\n        self.__driver: Person | None = None\n        self.__passenger: Person | None = None\n\n    def get_cost(self):\n        return self.__cost\n    \n    def set_cost(self, value: str):\n        self.__cost = value\n\n    def get_driver(self):\n        return self.__driver\n    \n    def set_driver(self, value: int):\n        self.__driver = value\n\n    def get_passenger(self):\n        return self.__passenger\n    \n    def set_passenger(self, value: int):\n        self.__passenger = value\n\n    def __str__(self):\n        driver_str = self.__driver if self.__driver else \"None\"\n        passenger_str = self.__passenger if self.__passenger else \"None\"   \n        return f\"Cost: {self.__cost}, Driver: {driver_str}, Passenger: {passenger_str}\"\n        \n    def set_motorista(self, driver: Person):\n        if self.__driver is not None:\n            print(\"fail: ja existe um motorista\")\n            return\n        self.__driver = driver\n\n    def set_passageiro(self, passenger: Person):\n        if self.__passenger is not None:\n            print(\"fail: moto ocupada\")\n            return\n        self.__passenger = passenger\n\n    def car(self, value: int):\n        self.__cost += value\n    \n    def leavePass(self):\n        if self.__passenger is None:\n            print(\"fail: nao ha passageiro\")\n            return\n        \n        passAntes: Person = self.__passenger\n\n        if self.__passenger.get_money() < self.__cost:\n            print(\"fail: Passenger does not have enough money\")\n            self.__driver.set_money(self.__driver.get_money() + self.__cost)\n            \n            self.__passenger.set_money(0)\n            self.__cost = 0\n            self.__passenger = None\n            print(f\"{passAntes} left\")\n            return\n        \n        self.__passenger.set_money(self.__passenger.get_money() - self.__cost)\n        self.__driver.set_money(self.__driver.get_money() + self.__cost)\n        self.__cost = 0\n        self.__passenger = None\n        print(f\"{passAntes} left\")\n    \ndef main():\n    motouber = Motouber()\n    \n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n        \n        if args[0] == \"end\":\n            break\n\n        elif args[0] == \"show\":\n            print(motouber)\n\n        elif args[0] == \"setDriver\":\n            driver = args[1]\n            money_driver = int(args[2])\n            motouber.set_motorista(Person(driver, money_driver))\n\n        elif args[0] == \"setPass\":\n            passenger = args[1]\n            money_pass = int(args[2])\n            motouber.set_passageiro(Person(passenger, money_pass))\n    \n        elif args[0] == \"drive\":\n            km = int(args[1])\n            motouber.car(km)\n\n        elif args[0] == \"leavePass\":\n            motouber.leavePass()\nmain()\n\n\n    \n\n        \n\n\n   \n        \n",
            "lines": "127"
        }
    ]
}